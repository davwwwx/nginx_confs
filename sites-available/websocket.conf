server {
    listen 80;
    listen [::]:80;

    server_name websocket.example.com;

    return 301 https://$host$request_uri;

    access_log /var/log/nginx/websocket.example.com.access.log;
    error_log  /var/log/nginx/websocket.example.com.error.log;
}

upstream websocket {
    server server1 weight=5 max_conns=100;
    server server2 max_conns=250;

    server unix:/tmp/backend max_conns=100;

    server server3 backup;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name websocket.example.com;

    include snippets/sec.conf;

    client_max_body_size 2M;

    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-NginX-Proxy true;
        proxy_set_header Host $host;

        proxy_buffering off;
        proxy_force_ranges on;
        proxy_ssl_session_reuse off;

        proxy_pass https://websocket;
        proxy_redirect off;
        proxy_cache_bypass $http_upgrade;

        # enable WebSockets
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    access_log /var/log/nginx/ssl.websocket.example.com.access.log;
    error_log  /var/log/nginx/ssl.websocket.example.com.error.log;
}
